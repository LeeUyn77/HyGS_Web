package com.example.demo.entities;
// Generated Dec 10, 2019, 8:57:54 PM by Hibernate Tools 5.2.12.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Account generated by hbm2java
 */
@Entity
@Table(name = "account")
public class Account implements java.io.Serializable {

	private Integer accountId;
	private String username;
	private String password;
	private String fullname;
	private String gender;
	private Date birthday;
	private Date dateCreated;
	private int point;
	private Set<Comment> comments = new HashSet<Comment>(0);
	private Set<RoleAccount> roleAccounts = new HashSet<RoleAccount>(0);
	private Set<Invoice> invoices = new HashSet<Invoice>(0);

	public Account() {
	}

	public Account(String username, String password, String fullname, String gender, Date birthday, Date dateCreated,
			int point) {
		this.username = username;
		this.password = password;
		this.fullname = fullname;
		this.gender = gender;
		this.birthday = birthday;
		this.dateCreated = dateCreated;
		this.point = point;
	}

	public Account(String username, String password, String fullname, String gender, Date birthday, Date dateCreated,
			int point, Set<Comment> comments, Set<RoleAccount> roleAccounts, Set<Invoice> invoices) {
		this.username = username;
		this.password = password;
		this.fullname = fullname;
		this.gender = gender;
		this.birthday = birthday;
		this.dateCreated = dateCreated;
		this.point = point;
		this.comments = comments;
		this.roleAccounts = roleAccounts;
		this.invoices = invoices;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "account_id", unique = true, nullable = false)
	public Integer getAccountId() {
		return this.accountId;
	}

	public void setAccountId(Integer accountId) {
		this.accountId = accountId;
	}

	@Column(name = "username", nullable = false, length = 250)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", nullable = false, length = 250)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "fullname", nullable = false, length = 250)
	public String getFullname() {
		return this.fullname;
	}

	public void setFullname(String fullname) {
		this.fullname = fullname;
	}

	@Column(name = "gender", nullable = false, length = 250)
	public String getGender() {
		return this.gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "birthday", nullable = false, length = 10)
	public Date getBirthday() {
		return this.birthday;
	}

	public void setBirthday(Date birthday) {
		this.birthday = birthday;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date_created", nullable = false, length = 10)
	public Date getDateCreated() {
		return this.dateCreated;
	}

	public void setDateCreated(Date dateCreated) {
		this.dateCreated = dateCreated;
	}

	@Column(name = "point", nullable = false)
	public int getPoint() {
		return this.point;
	}

	public void setPoint(int point) {
		this.point = point;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<Comment> getComments() {
		return this.comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<RoleAccount> getRoleAccounts() {
		return this.roleAccounts;
	}

	public void setRoleAccounts(Set<RoleAccount> roleAccounts) {
		this.roleAccounts = roleAccounts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<Invoice> getInvoices() {
		return this.invoices;
	}

	public void setInvoices(Set<Invoice> invoices) {
		this.invoices = invoices;
	}

}
